# Active Profile Configuration
spring.profiles.active=local

# Server Configuration
server.port=8081
server.servlet.context-path=/api

# Database Configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/ocr_service
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=validate
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.show-sql=true

# Flyway Configuration
spring.flyway.enabled=true
spring.flyway.baseline-on-migrate=true

# File Upload Configuration
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB
spring.servlet.multipart.enabled=true

# Google Cloud Vision API Configuration
google.vision.credentials-file-path=${GOOGLE_APPLICATION_CREDENTIALS:./google-credentials.json}

# Document Storage Configuration
document.storage.location=${DOCUMENT_STORAGE_LOCATION:./document-storage}

# Logging Configuration
logging.level.root=INFO
logging.level.com.mb.ocrservice=DEBUG
logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR

# Security Configuration
security.jwt.token.secret-key=${JWT_SECRET_KEY:secret-key}
security.jwt.token.expire-length=3600000

# OCR Processing Configuration
ocr.max-retries=3
ocr.retry-delay-ms=5000

# Kafka Configuration
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=document-verification-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=com.mb.ocrservice.dto,com.dtp.loanapplication.dto.event
spring.kafka.consumer.properties.spring.json.type.mapping=DocumentVerificationEvent:com.mb.ocrservice.dto.VerifyDocumentEvent
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.mb.ocrservice.dto.VerifyDocumentEvent
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer

# Kafka Topics
kafka.topic.verify-document=verify-document
kafka.topic.document-verification-completed=document-verification-completed
kafka.topic.document-verification-error=document-verification-error
